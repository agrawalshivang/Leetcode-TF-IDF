you have n packages that you are trying to place in boxes, one package in each box. there are m suppliers that each produce boxes of different sizes (with infinite supply). a package can be placed in a box if the size of the package is less than or equal to the size of the box.
the package sizes are given as an integer array packages, where packages[i] is the size of the ith package. the suppliers are given as a 2d integer array boxes, where boxes[j] is an array of box sizes that the jth supplier produces.
you want to choose a single supplier and use boxes from them such that the total wasted space is minimized. for each package in a box, we define the space wasted to be size of the box - size of the package. the total wasted space is the sum of the space wasted in all the boxes.
for example, if you have to fit packages with sizes [2,3,5] and the supplier offers boxes of sizes [4,8], you can fit the packages of size-2 and size-3 into two boxes of size-4 and the package with size-5 into a box of size-8. this would result in a waste of (4-2) + (4-3) + (8-5) = 6.
return the minimum total wasted space by choosing the box supplier optimally, or -1 if it is impossible to fit all the packages inside boxes. since the answer may be large, return it modulo 109 + 7.
