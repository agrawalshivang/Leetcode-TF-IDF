you are given an integer n representing the number of nodes in a perfect binary tree consisting of nodes numbered from 1 to n. the root of the tree is node 1 and each node i in the tree has two children where the left child is the node 2 * i and the right child is 2 * i + 1.
each node in the tree also has a cost represented by a given 0-indexed integer array cost of size n where cost[i] is the cost of node i + 1. you are allowed to increment the cost of any node by 1 any number of times.
return the minimum number of increments you need to make the cost of paths from the root to each leaf node equal.
note:
a perfect binary tree is a tree where each node, except the leaf nodes, has exactly 2 children.
the cost of a path is the sum of costs of nodes in the path.
